import { describe, expect, it } from "vitest";
import {
  emit,
  map,
  parse,
  type EmissionOptions,
  type MappingOptions,
} from "./index.js";

describe("@ch2ts/core placeholders", () => {
  it("parse → map → emit produces stable output", () => {
    const ddl = "CREATE TABLE my_table (id UInt64 COMMENT 'id', name String)";
    const tables = parse(ddl);
    const mapOpts: MappingOptions = {
      int64As: "bigint",
      decimal: "string",
      datetimeAs: "string",
      camelCase: true,
    };
    const mapped = map(tables, mapOpts);
    const emitOpts: EmissionOptions = { emitZod: false };
    const out = emit(mapped, emitOpts);
    expect(out).toMatchInlineSnapshot(`
      "/*
       * Generated by @ch2ts/core
       * Options: {"emitZod":false}
       */
      export interface MyTable {
          /** Original: UInt64 — id */
          id: bigint;
          /** Original: String */
          name: string;
      }
      "
    `);
  });
});
